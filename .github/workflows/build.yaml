name: Docker Image Build and Publish to ACR
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "app/**"
jobs:
  Docker-Build-Push:
    permissions:
      id-token: write
      attestations: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.7.0
      - name: Check cosign install version
        run: cosign version
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_LOGIN_SERVER }}
          username: ${{ vars.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Gather Docker meta information
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.ACR_LOGIN_SERVER }}/${{ github.event.repository.name }}
          tags: type=sha,format=long
      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.ACR_LOGIN_SERVER }}/${{ github.event.repository.name }}:latest
      - name: Attest build provenance
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ vars.ACR_LOGIN_SERVER }}/${{ github.event.repository.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Sign image without a key
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          DIGEST: ${{ steps.push.outputs.digest }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_KEY }}
